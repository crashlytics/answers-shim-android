plugins {
    id "com.jfrog.bintray" version "1.6"
}

apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'maven-publish'

bintray {
    user = project.hasProperty('BINTRAY_USER') ? project.BINTRAY_USER : ''
    key = project.hasProperty('BINTRAY_API_KEY') ? project.BINTRAY_API_KEY : ''
    publications = ['aar']
    publish = true // Publish the release publicly, this prevents needing to log into jCenter to publish
    pkg {
        repo = 'fabric'
        name = "${project.pom_group_id}:${project.pom_artifact_id}"
        userOrg = user
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/crashlytics/answers-shim-android.git'
        version {
            name = project.version
            released  = new Date()
            mavenCentralSync {
                // Sync the release to Maven Central
                user = project.hasProperty('SONATYPE_USER') ? project.SONATYPE_USER : ''
                password = project.hasProperty('SONATYPE_PASSWORD') ? project.SONATYPE_PASSWORD : ''
            }
        }
    }
}

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "source"
}

def pomConfig = {
    name 'Fabric Answers Shim'
    url 'https://fabric.io'
    organization {
        name 'Fabric'
        url 'https://fabric.io'
    }
    scm {
        url "https://github.com/crashlytics/answers-shim-android"
        connection "scm:git:http://github.com/crashlytics/answers-shim-android.git"
        developerConnection "scm:git:git@github.com:crashlytics/answers-shim-android.git"
    }
    licenses {
        license {
            name 'Apache 2.0'
            url 'https://opensource.org/licenses/apache2.0.php'
            distribution 'repo'
        }
    }
    developers {
        developer {
            id 'fabric'
            name 'Fabric'
            organization 'Fabric'
            organizationUrl 'https://fabric.io'
        }
    }
}

publishing {
    publications {
        aar(MavenPublication) {
            pom.withXml {
                // Putting the description in pomConfig doesn't work (dont know why)
                asNode().appendNode('description', 'Allow kits to send events, which will be forwarded to the Answers Kit if it is available')
                asNode().children().last() + pomConfig
            }

            groupId pom_group_id
            artifactId pom_artifact_id
            version version
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
        }
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard.txt'
        }
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.10.19"

    compile('com.crashlytics.sdk.android:answers:1.3.6@aar') {
        transitive = true;
    }
}
